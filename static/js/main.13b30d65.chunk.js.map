{"version":3,"sources":["components/assets/_reset.js","components/assets/useCounter.js","components/assets/_increase.js","components/assets/_decrease.js","components/assets/_deleteCounter.js","components/assets/_addCounter.js","components/Counters/Counters.js","components/App/App.js","serviceWorker.js","index.js"],"names":["_reset","useCounter","value","rand","Math","random","toFixed","initialList","id","uuid","useState","count","setCount","list","setList","handlePlus","x","_increase","handleMinus","_decrease","handleReset","handleDelete","idx","findIndex","el","slice","_deleteCounter","handleAddCounter","num","_addCounter","Counter","className","onClick","App","map","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2KAAaA,EAAS,WAClB,OAAQ,G,eCOCC,EAAa,SAACC,GAEvB,IAAMC,IAAyB,GAAhBC,KAAKC,UAAeC,UAE7BC,EAAc,CAChB,CAACC,GAAIC,cAAQP,MAAO,GACpB,CAACM,GAAIC,cAAQP,MAAO,IACpB,CAACM,GAAIC,cAAQP,MAAOC,IAPS,EAUPO,mBAAS,GAVF,mBAU1BC,EAV0B,KAUnBC,EAVmB,OAWTF,mBAASH,GAXA,mBAW1BM,EAX0B,KAWpBC,EAXoB,KAuBjC,MAAO,CACHH,QACAE,OACAE,WAXe,kBAAMH,ECvBJ,SAACD,EAAOK,GAC7B,OAAOL,EAAQK,EDsBmBC,CAAUN,EAAOT,KAY/CgB,YAdgB,kBAAMN,EErBL,SAACD,EAAOK,GAC7B,OAAOL,EAAQK,EFoBoBG,CAAUR,EAAOT,KAehDkB,YAXgB,kBAAMR,EAASZ,IAY/BqB,aARiB,SAACb,GAAD,OAAQM,EG7BH,SAACN,EAAIK,GAC/B,IAAMS,EAAKT,EAAKU,WAAU,SAACC,GAAD,OAAQA,EAAGhB,KAAOA,KAC5C,MAAM,GAAN,mBACOK,EAAKY,MAAM,EAAGH,IADrB,YAEOT,EAAKY,MAAMH,EAAM,KHyBaI,CAAelB,EAAIK,KASpDc,iBAXqB,kBAAMb,EIzBR,SAACD,EAAMe,GAAP,4BAAmBf,GAAnB,CAAwB,CAAC,GAAMJ,cAAQ,MAASmB,KJyBhCC,CAAYhB,EAAMV,OKxBhD2B,EAAU,SAAC,GAA+B,IAA9BtB,EAA6B,EAA7BA,GAAIN,EAAyB,EAAzBA,MAAOmB,EAAkB,EAAlBA,aAAkB,EAEIpB,EAAWC,GAA1DS,EAF2C,EAE3CA,MAAOO,EAFoC,EAEpCA,YAAaH,EAFuB,EAEvBA,WAAYK,EAFW,EAEXA,YAEvC,OACI,yBAAKW,UAAU,sCACX,yBAAKA,UAAU,4CACX,4BAAQA,UAAU,2BAA2BC,QAASd,GAAtD,IAAqEhB,GACrE,0BAAM6B,UAAU,UAAUpB,GAC1B,4BAAQoB,UAAU,2BAA2BC,QAASjB,GAAtD,IAAoEb,IAExE,yBAAK6B,UAAU,wCACX,4BAAQA,UAAU,mBAAmBC,QAAS,kBAAMZ,EAAYZ,KAAhE,SACA,4BAAQuB,UAAU,qBAAqBC,QAAS,kBAAMX,EAAab,KAAnE,aCcDyB,MA1Bf,WAAgB,IAAD,EAEkFhC,IAArFY,EAFG,EAEHA,KAAMF,EAFH,EAEGA,MAAOU,EAFV,EAEUA,aAAcH,EAFxB,EAEwBA,YAAaH,EAFrC,EAEqCA,WAAYK,EAFjD,EAEiDA,YAAaO,EAF9D,EAE8DA,iBAEzE,OACI,yBAAKI,UAAU,0EACX,wBAAIA,UAAU,uBAAd,YACA,yBAAKA,UAAU,8CACVlB,EAAKqB,KAAI,SAAAV,GAAE,OACR,kBAAC,EAAD,CACIW,IAAKX,EAAGhB,GACRA,GAAIgB,EAAGhB,GACPG,MAAOA,EACPT,MAAOsB,EAAGtB,MACVmB,aAAcA,EACdH,YAAaA,EACbH,WAAYA,EACZK,YAAaA,QAIzB,4BAAQW,UAAU,oBAAoBC,QAASL,GAA/C,iBCbQS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.13b30d65.chunk.js","sourcesContent":["export const _reset = () => {\n    return  0;\n}\n","import {useState} from \"react\";\nimport {_reset} from \"./_reset\";\nimport {_decrease} from \"./_decrease\";\nimport {_increase} from \"./_increase\";\nimport {_addCounter} from \"./_addCounter\";\nimport {_deleteCounter} from \"./_deleteCounter\";\nimport {v4 as uuid} from 'uuid';\n\nexport const useCounter = (value) => {\n\n    const rand = +(Math.random() * 10).toFixed();\n\n    const initialList = [\n        {id: uuid(), value: 1},\n        {id: uuid(), value: 10},\n        {id: uuid(), value: rand},\n    ];\n\n    const [count, setCount] = useState(0);\n    const [list, setList] = useState(initialList);\n\n    const handleMinus = () => setCount(_decrease(count, value));\n\n    const handlePlus = () => setCount(_increase(count, value));\n\n    const handleReset = () => setCount(_reset);\n\n    const handleAddCounter = () => setList(_addCounter(list, rand));\n\n    const handleDelete = (id) => setList(_deleteCounter(id, list));\n\n    return {\n        count,\n        list,\n        handlePlus,\n        handleMinus,\n        handleReset,\n        handleDelete,\n        handleAddCounter\n    }\n\n}\n","export const _increase = (count, x) => {\n    return count + x;\n}\n","export const _decrease = (count, x) => {\n    return count - x;\n}\n","export const _deleteCounter = (id, list) => {\n    const idx =list.findIndex((el) => el.id === id);\n    return [\n        ...list.slice(0, idx),\n        ...list.slice(idx + 1)\n    ];\n}\n","import {v4 as uuid} from \"uuid\";\n\nexport const _addCounter = (list, num) => [...list,{\"id\": uuid(), \"value\": num}];\n","import React from 'react';\nimport {useCounter} from \"../assets/useCounter\";\n\nexport const Counter = ({id, value, handleDelete}) => {\n\n    const {count, handleMinus, handlePlus, handleReset} = useCounter(value);\n\n    return (\n        <div className=\"d-flex justify-content-between m-2\">\n            <div className=\"container d-flex justify-content-between\">\n                <button className=\"btn btn-outline-info m-1\" onClick={handleMinus}>-{value}</button>\n                <span className=\"h3 m-2\">{count}</span>\n                <button className=\"btn btn-outline-info m-1\" onClick={handlePlus}>+{value}</button>\n            </div>\n            <div className=\"container d-flex justify-content-end\">\n                <button className=\"btn btn-info m-1\" onClick={() => handleReset(id)}>RESET</button>\n                <button className=\"btn btn-danger m-1\" onClick={() => handleDelete(id)}>DELETE\n                </button>\n\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport {Counter} from \"../Counters/Counters\";\nimport {useCounter} from \"../assets/useCounter\";\n\nfunction App() {\n\n    const { list, count, handleDelete, handleMinus, handlePlus, handleReset, handleAddCounter} = useCounter();\n\n    return (\n        <div className=\"container d-flex justify-content-center align-items-center flex-column\">\n            <h1 className=\"font-weight-lighter\">Counters</h1>\n            <div className=\"d-flex flex-column justify-content-between\">\n                {list.map(el => (\n                    <Counter\n                        key={el.id}\n                        id={el.id}\n                        count={count}\n                        value={el.value}\n                        handleDelete={handleDelete}\n                        handleMinus={handleMinus}\n                        handlePlus={handlePlus}\n                        handleReset={handleReset}\n                    />\n                    ))}\n            </div>\n            <button className=\"btn btn-info mb-3\" onClick={handleAddCounter}>ADD COUNTER</button>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}